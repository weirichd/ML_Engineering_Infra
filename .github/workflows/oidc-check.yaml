name: OIDC Check
on:
  workflow_dispatch:

jobs:
  test-oidc:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Show repo/ref
        run: |
          echo "repository=${{ github.repository }}"
          echo "ref=${{ github.ref }}"
          echo "sha=${{ github.sha }}"
          echo "actor=${{ github.actor }}"

      - name: Fetch and print OIDC sub
        id: oidc
        run: |
          set -euo pipefail
          # Request an OIDC token for audience sts.amazonaws.com
          TOK=$(curl -sSL -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" \
            "${ACTIONS_ID_TOKEN_REQUEST_URL}&audience=sts.amazonaws.com" | jq -r .value)
          # Decode JWT payload to see claims
          PAYLOAD=$(echo "$TOK" | cut -d '.' -f2 | base64 -d 2>/dev/null || true)
          echo "OIDC payload:"
          echo "$PAYLOAD" | jq .
          echo "SUB_CLAIM=$(echo "$PAYLOAD" | jq -r .sub)" >> $GITHUB_OUTPUT

      - name: Try STS AssumeRoleWithWebIdentity (manual)
        env:
          ROLE_ARN: ${{ secrets.AWS_DEPLOY_ROLE_ARN }}
        run: |
          set -euo pipefail
          # Get a fresh OIDC token for audience sts.amazonaws.com
          TOK=$(curl -sSL -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" \
            "${ACTIONS_ID_TOKEN_REQUEST_URL}&audience=sts.amazonaws.com" | jq -r .value)

          echo "Calling aws sts assume-role-with-web-identity..."
          aws sts assume-role-with-web-identity \
            --role-arn "$ROLE_ARN" \
            --role-session-name "oidc-test" \
            --web-identity-token "$TOK" \
            --duration-seconds 900 \
            --output json

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_DEPLOY_ROLE_ARN }}
          aws-region: us-east-1

      - name: Who am I?
        run: aws sts get-caller-identity

