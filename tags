!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!Python	nameref	/the original name for the tag/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!Markdown	S,subsection	/level 2 sections/
!_TAG_KIND_DESCRIPTION!Markdown	T,l4subsection	/level 4 sections/
!_TAG_KIND_DESCRIPTION!Markdown	c,chapter	/chapters/
!_TAG_KIND_DESCRIPTION!Markdown	h,hashtag	/hashtags/
!_TAG_KIND_DESCRIPTION!Markdown	n,footnote	/footnotes/
!_TAG_KIND_DESCRIPTION!Markdown	s,section	/sections/
!_TAG_KIND_DESCRIPTION!Markdown	t,subsubsection	/level 3 sections/
!_TAG_KIND_DESCRIPTION!Markdown	u,l5subsection	/level 5 sections/
!_TAG_KIND_DESCRIPTION!Python	I,namespace	/name referring a module defined in other file/
!_TAG_KIND_DESCRIPTION!Python	Y,unknown	/name referring a class\/variable\/function\/module defined in other module/
!_TAG_KIND_DESCRIPTION!Python	c,class	/classes/
!_TAG_KIND_DESCRIPTION!Python	f,function	/functions/
!_TAG_KIND_DESCRIPTION!Python	i,module	/modules/
!_TAG_KIND_DESCRIPTION!Python	m,member	/class members/
!_TAG_KIND_DESCRIPTION!Python	v,variable	/variables/
!_TAG_KIND_DESCRIPTION!Sh	a,alias	/aliases/
!_TAG_KIND_DESCRIPTION!Sh	f,function	/functions/
!_TAG_KIND_DESCRIPTION!Sh	h,heredoc	/label for here document/
!_TAG_KIND_DESCRIPTION!Sh	s,script	/script files/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!Markdown	1.1	/current.age/
!_TAG_PARSER_VERSION!Python	0.0	/current.age/
!_TAG_PARSER_VERSION!Sh	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/david/Franklin_U/ml_engineer_infra/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.1.0	/p6.1.20240714.0/
!_TAG_ROLE_DESCRIPTION!Python!module	imported	/imported modules/
!_TAG_ROLE_DESCRIPTION!Python!module	indirectlyImported	/module imported in alternative name/
!_TAG_ROLE_DESCRIPTION!Python!module	namespace	/namespace from where classes\/variables\/functions are imported/
!_TAG_ROLE_DESCRIPTION!Python!unknown	imported	/imported from the other module/
!_TAG_ROLE_DESCRIPTION!Python!unknown	indirectlyImported	/classes\/variables\/functions\/modules imported in alternative name/
!_TAG_ROLE_DESCRIPTION!Sh!heredoc	endmarker	/end marker/
!_TAG_ROLE_DESCRIPTION!Sh!script	loaded	/loaded/
1. Push to `main` branch	README.md	/^### 1. Push to `main` branch$/;"	S	section:MLflow on AWS EC2 (with SQLite + S3 + Nginx + Basic Auth)""Deployment
1. SSH into the EC2 instance	README.md	/^### 1. SSH into the EC2 instance$/;"	S	section:MLflow on AWS EC2 (with SQLite + S3 + Nginx + Basic Auth)""Managing Users
2. Access the MLflow server	README.md	/^### 2. Access the MLflow server$/;"	S	section:MLflow on AWS EC2 (with SQLite + S3 + Nginx + Basic Auth)""Deployment
2. Open a shell inside the container	README.md	/^### 2. Open a shell inside the container$/;"	S	section:MLflow on AWS EC2 (with SQLite + S3 + Nginx + Basic Auth)""Managing Users
3. Create the database if not already present	README.md	/^### 3. Create the database if not already present$/;"	S	section:MLflow on AWS EC2 (with SQLite + S3 + Nginx + Basic Auth)""Managing Users
4. Add a new user	README.md	/^### 4. Add a new user$/;"	S	section:MLflow on AWS EC2 (with SQLite + S3 + Nginx + Basic Auth)""Managing Users
5. Set user permissions	README.md	/^### 5. Set user permissions$/;"	S	section:MLflow on AWS EC2 (with SQLite + S3 + Nginx + Basic Auth)""Managing Users
6. List users	README.md	/^### 6. List users$/;"	S	section:MLflow on AWS EC2 (with SQLite + S3 + Nginx + Basic Auth)""Managing Users
Cleanup	README.md	/^## Cleanup$/;"	s	chapter:MLflow on AWS EC2 (with SQLite + S3 + Nginx + Basic Auth)
Deployment	README.md	/^## Deployment$/;"	s	chapter:MLflow on AWS EC2 (with SQLite + S3 + Nginx + Basic Auth)
End Result	README.md	/^## End Result$/;"	s	chapter:MLflow on AWS EC2 (with SQLite + S3 + Nginx + Basic Auth)
MLflow on AWS EC2 (with SQLite + S3 + Nginx + Basic Auth)	README.md	/^# MLflow on AWS EC2 (with SQLite + S3 + Nginx + Basic Auth)$/;"	c
Managing Users	README.md	/^## Managing Users$/;"	s	chapter:MLflow on AWS EC2 (with SQLite + S3 + Nginx + Basic Auth)
Prerequisites	README.md	/^## Prerequisites$/;"	s	chapter:MLflow on AWS EC2 (with SQLite + S3 + Nginx + Basic Auth)
Testing	README.md	/^## Testing$/;"	s	chapter:MLflow on AWS EC2 (with SQLite + S3 + Nginx + Basic Auth)
args	mlflow_test/basic_test.py	/^    args = parser.parse_args()$/;"	v
err	bin/deploy.sh	/^err() { printf "\\033[31m%s\\033[0m\\n" "$*" >&2; }$/;"	f
info	bin/deploy.sh	/^info(){ printf "\\033[36m%s\\033[0m\\n" "$*"; }$/;"	f
main	mlflow_test/basic_test.py	/^def main(ip: str) -> None:$/;"	f	typeref:typename:None
np	mlflow_test/basic_test.py	/^import numpy as np$/;"	I	nameref:module:numpy
ok	bin/deploy.sh	/^ok()  { printf "\\033[32m%s\\033[0m\\n" "$*"; }$/;"	f
parser	mlflow_test/basic_test.py	/^    parser = argparse.ArgumentParser(description="MLflow smoke test")$/;"	v
stack_failed_events	bin/deploy.sh	/^stack_failed_events() {$/;"	f
stack_outputs	bin/deploy.sh	/^stack_outputs() {$/;"	f
stack_status	bin/deploy.sh	/^stack_status() {$/;"	f
watch_events	bin/deploy.sh	/^watch_events() {$/;"	f
